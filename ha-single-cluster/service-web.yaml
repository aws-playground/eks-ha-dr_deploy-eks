---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-peccy-web
  labels:
    app: service-peccy-web
spec:
  replicas: 6
  selector:
    matchLabels:
      app: service-peccy-web
  template:
    metadata:
      labels:
        app: service-peccy-web
    spec:
      nodeSelector:
        type: service
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: service-peccy-web
      containers:
      - name: service-peccy-web
        image: ghcr.io/ssup2-playground/service-peccy-web:0.1.2
        imagePullPolicy: Always
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: API_ENDPOINT
          value: http://service-peccy-api.eks-ha-single.test
        - name: AWS_REGION
          value: Tyoko

---
apiVersion: v1
kind: Service
metadata:
  name: service-peccy-web
spec:
  type: NodePort
  selector:
    app: service-peccy-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: service-peccy-web
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "5"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "3"
    external-dns.alpha.kubernetes.io/alias: "true"
spec:
  ingressClassName: alb
  rules:
  - host: service-peccy.eks-ha-single.test
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-peccy-web
            port:
              number: 80
